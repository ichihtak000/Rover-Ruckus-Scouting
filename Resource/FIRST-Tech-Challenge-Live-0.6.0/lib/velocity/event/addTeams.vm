## Copyright (c) 2018 FIRST, Thomas Barnette, George Marchant, and Trey Woodlief. All rights reserved.
##
## Redistribution and use in source and binary forms, with or without modification,
## are permitted (subject to the limitations in the disclaimer below) provided that
## the following conditions are met:
##
## Redistributions of source code must retain the above copyright notice, this list
## of conditions and the following disclaimer.
##
## Redistributions in binary form must reproduce the above copyright notice, this
## list of conditions and the following disclaimer in the documentation and/or
## other materials provided with the distribution.
##
## Neither the name of FIRST nor the names of its contributors may be used to endorse or
## promote products derived from this software without specific prior written permission.
##
## NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS
## LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
## "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
## THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
## ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
## FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
## DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
## SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
## CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
## OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
## OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##

#parse("/velocity/layout.vm")
#@mainLayout()

<style>
	/* Style the tab */
	.tab {
	    overflow: hidden;
	    border: 1px solid #ccc;
	    background-color: #f1f1f1;
	}
	
	/* Style the buttons that are used to open the tab content */
	.tab button {
	    background-color: inherit;
	    float: left;
	    border: none;
	    outline: none;
	    cursor: pointer;
	    padding: 14px 16px;
	    transition: 0.3s;
	}
	
	/* Change background color of buttons on hover */
	.tab button:hover {
	    background-color: #ddd;
	}
	
	/* Create an active/current tablink class */
	.tab button.active {
	    background-color: #ccc;
	}
	
	/* Style the tab content */
	.tabcontent {
	    display: none;
	    padding: 6px 12px;
	    border: 1px solid #ccc;
	    border-top: none;
	}
	.table th, .table td{
		padding: .1rem;
		font-size:12px;
	}
	
	.uploadForm {
		display:inline;
		float:right;
		border-left:1px solid #ccc;
		padding-left:10px;
	}
	#doneButton {
		margin: 6px 6px;
	}
</style>
	<div class="row justify-content-center">
		<a href=".." class="col-2"><< Back</a> <div class="col-8 h2 text-center">Adding to $addType '$addingTo'</div> <div class="col-2"></div>
	</div>
	#if($detached)
		<div class="row justify-content-center">
			<div class="col-12 text-center">Warning: This division has been detached. Changes will not reflect in the Main Event until import of completed Division data.</div> 
		</div>
	#end
<div class="row">
	<div class="col-lg-12">
    	
    	<div class="tab">
    	<button class="tablink" onclick="openTab(this, 'list')" id="listTab">Find by State/Province</button>
    	#if(!$addingToLeague && $isLeague)
    		<button class="tablink" onclick="openTab(this, 'league')" id="leagueTab">Find by League</button>
    	#end
    	<button class="tablink" onclick="openTab(this, 'individual')" id="indTab">Add Individually</button>
    	<a href=".." class="btn btn-primary float-right align-middle" id="doneButton">Done</a>
    	</div>
    	<div id="list" class="tabcontent">
    		<label for="countrySelect">Country:</label><select id="countrySelect"></select>
    		<label for="stateSelect">State/Province:</label><select id="stateSelect"></select>
    	    <table id="teamsThatExist" class="table table-striped table-hover" style ="word-break:break-word;">
    	    <thead>
    			<tr class="d-flex">
    				<th scope="col" class="col-1">Number</th>
    				<th scope="col" class="col-2">Name</th>
    				<th scope="col" class="col-3">Affiliation</th>
    				<th scope="col" class="col-2">City</th>
    				<th scope="col" class="col-1">State/<wbr>Province</th>
    				<th scope="col" class="col-1">Country</th>
    				<th scope="col" class="col-1">Rookie Year</th>
    				<th scope="col" class="col-1">Add?</th>
    			</tr>
    			</thead>
    			<tbody id="allAtEventList">
				</tbody>
    		</table>
    	</div>
    	<div id="league" class="tabcontent">
    		<label for="leagueSelect">League:</label><select id="leagueSelect"></select>
    		<button class="btn float-right" onclick="addAllFromLeague()">Add All to Event</button>
    	    <table id="teamsThatExist" class="table table-striped table-hover" style ="word-break:break-word;">
    	    <thead>
    			<tr class="d-flex">
    				<th scope="col" class="col-1">Number</th>
    				<th scope="col" class="col-2">Name</th>
    				<th scope="col" class="col-3">Affiliation</th>
    				<th scope="col" class="col-2">City</th>
    				<th scope="col" class="col-1">State/<wbr>Province</th>
    				<th scope="col" class="col-1">Country</th>
    				<th scope="col" class="col-1">Rookie Year</th>
    				<th scope="col" class="col-1">Add?</th>
    			</tr>
    			</thead>
    			<tbody id="allInLeagueList">
				</tbody>
    		</table>
    	</div>
    	<div id="individual" class="tabcontent" >
    		<label>Team Number to Add:</label>
    		<input type="text" id='teamIn' ></input>
    		<button class="btn"id="indAdd" onclick="addTeam(document.getElementById('teamIn'))">Add</button>
    		<label><input type="checkbox" onclick="hideSchools(this)" id="hideSchoolsBox">Hide Affiliation / Full Name</label>
    		
    		<form method='post' enctype='multipart/form-data' class="uploadForm">
    			<input type='file' name='uploaded_file' id="uploadTeamInput" onchange="document.getElementById('uploadTeamButton').disabled = (this.value.length == 0)">
    			<button id="uploadTeamButton" disabled>Upload Team List</button>
			</form>
    		<table id="teamsAtEvent" class="table table-striped table-hover" style ="word-break:break-word;">
    			<tr class="d-flex" id="row_0">
    				<th scope="col" class="col-1">Number</th>
    				<th scope="col" class="col-2">Name</th>
    				<th scope="col" class="col-2 school">Affiliation</th>
    				<th scope="col" class="col-1">City</th>
    				<th scope="col" class="col-1">State/<wbr>Province</th>
    				<th scope="col" class="col-1">Country</th>
    				<th scope="col" class="col-1">Rookie Year</th>
    				#if(!$addingToLeague)
    				<th scope="col" class="col-1 advanced">Advanced</th>
    				<th scope="col" class="col-1 division">Division</th>
    				#end
    				<th scope="col" class="col-1">#if($addingToLeague)Remove#{else}Edit#end</th>
    			</tr>
    			#foreach ($team in $teamsAtEvent)
    				#set($data = $team.data)
    				<tr id="row_$data.number" class="d-flex">
    					<th scope="row" class="col-1"><input class="form-control" type="text" value="$data.number" disabled id="number$data.number"></th>
    					<td class="col-2"><input class="form-control" type="text" value="$data.name" disabled id="name$data.number"></td>
    					<td class="col-2 school"><input class="form-control" type="text" value="$data.school" disabled id="school$data.number"></td>
    					<td class="col-1"><input class="form-control" type="text" value="$data.city" disabled id="city$data.number"></td>
    					<td class="col-1"><input class="form-control" type="text" value="$data.state" disabled id="state$data.number"></td>
    					<td class="col-1"><input class="form-control" type="text" value="$data.country" disabled id="country$data.number"></td>
    					<td class="col-1"><input class="form-control" type="text" value="$data.rookie" disabled id="rookie$data.number"></td>
    					#if(!$addingToLeague)
    					<td class="col-1 advanced vertical-align"><input class="form-control" type="checkbox" #if($team.advanced)checked#end disabled id="advanced$data.number"></td>
    					<td class="col-1 division"><input class="form-control" type="text" value="$team.division" disabled id="division$data.number"></td>
    					#end
    					<td class="col-1 edits">
    						#if(!$addingToLeague)<button onclick="editable($data.number)" id="edit$data.number"><i class='fas fa-edit'></i></button>&nbsp;#end
    						<button onclick="saveTeam($data.number)" id="save$data.number" style="display:none;"><i class="fas fa-save"></i></button>&nbsp;
    						<button class="rmv" onclick="remove($data.number)" #if($isDivision)title="Removes team from division, not event"#end><i class='fas fa-times-circle'></i></button>
    					</td>
    				</tr>
    			#end
    		</table>
    	</div>
    
	</div>
</div>	
#if($dd)
	<br>
	<div class="row">
		<div class="col-1"></div>
		<button class="col-4" onclick="assignRandom()">Assign Divisions Randomly</button>
		<div class="col-2"></div>
		<button class="col-4" onclick="clearDivisions()">Clear Division Assignments</button>
		<div class="col-1"></div>
	</div>
#end

<script>
function openTab(src, name) {
    ## Declare all variables
    var i, tabcontent, tablinks;

    ## Get all elements with class="tabcontent" and hide them
    tabcontent = document.getElementsByClassName("tabcontent");
    for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }

    ## Get all elements with class="tablinks" and remove the class "active"
    tablinks = document.getElementsByClassName("tablink");
    for (i = 0; i < tablinks.length; i++) {
        tablinks[i].className = tablinks[i].className.replace(" active", "");
    }

    ## Show the current tab, and add an "active" class to the button that opened the tab
    document.getElementById(name).style.display = "block";
    src.className += " active";
}
function addAllFromLeague() {
	$("#allInLeagueList > tr").each(function() {
		var id = $(this).attr('id');
		var num = parseInt(id.substring(4));
		add(num);
		$("#" + num + "Checkbox").prop( "checked", true );
	});
}
function generateRow(data){
	var schoolHidden = $("#hideSchoolsBox").prop('checked');
		/*
	return "<tr id=row_"+data.number+" class='d-flex'><th scope='row' class='col-1'>"+data.number+"</td><td class='col-2'>"+data.name+"</td><td class='school " +
		( schoolHidden ? "d-none" : "col-2")+"'>"+ data.school+"</td><td class='col-2'>"+data.city+"</td><td class='col-1'>"+data.state+"</td><td class='col-1'>"+
		data.country+"</td><td class='col-1'"+data.rookie+"</td><td class='col-1 advanced'>false</td><td class='col-1 division'>-1</td>"+
		"<td class='col-1 edits'><button onclick='edit("+data.number+")'><i class='fas fa-edit'></i></button>&nbsp;<button class='rmv' onclick='remove("+data.number+")'><i class='fas fa-times-circle'></i></button></td>"+
		"</tr>";
		*/
	return "<tr id='row_"+data.number+"' class='d-flex'>	<th scope='row' class='col-1'><input class='form-control' type='text' value='"+data.number+"' disabled id='number"+data.number+"'></th>	<td class='col-2'><input class='form-control' type='text' value='"+data.name+"' disabled id='name"+data.number+"'></td>	<td class='"+( schoolHidden ? "d-none" : "col-2")+" school'><input class='form-control' type='text' value='"+data.school+"' disabled id='school"+data.number+"'></td>	<td class='col-1'><input class='form-control' type='text' value='"+data.city+"' disabled id='city"+data.number+"'></td>	<td class='col-1'><input class='form-control' type='text' value='"+data.state+"' disabled id='state"+data.number+"'></td>	<td class='col-1'><input class='form-control' type='text' value='"+data.country+"' disabled id='country"+data.number+"'></td>	<td class='col-1'><input class='form-control' type='text' value='"+data.rookie+"' disabled id='rookie"+data.number+"'></td>#if(!$addingToLeague)<td class='"+( schoolHidden ? "col-2" : "col-1")+" advanced vertical-align'><input class='form-control' type='checkbox' value='$team.advanced' disabled id='advanced"+data.number+"'></td>	<td class='col-1 division'><input class='form-control' type='text' value='$division' disabled id='division"+data.number+"'></td>#end	<td class='col-1 edits'>		#if(!$addingToLeague)<button onclick='editable("+data.number+")' id='edit"+data.number+"'><i class='fas fa-edit'></i></button>&nbsp;#end		<button onclick='saveTeam("+data.number+")' id='save"+data.number+"' style='display:none;'><i class='fas fa-save'></i></button>&nbsp;		<button class='rmv' onclick='remove("+data.number+")'><i class='fas fa-times-circle'></i></button>	</td></tr>"
}

function addTeam(src){
	var num = parseInt(src.value);
	src.value = "";
	add(num);
}

function add(num) {
	$.ajax({
	    url: '',
	    type: 'PUT',
	    data: {
	        team:num
	    },
	    success: function (data,textStatus, xhr) {
	    	if(xhr.status == 200 || xhr.status == 201){
	    		var parsed = JSON.parse(data);
	    		var found = 0;
	    		$("#individual tr.d-flex").each(function() {
	    			var id = $(this).attr('id');
	    			if (id && id.startsWith("row_")){
	    				var cur = parseInt(id.substring(4));
	    				if (cur < parsed.number && cur > found) {
	    					found = cur;
	    				}
	    			}
	    		});
	    		$(generateRow(parsed)).insertAfter("#teamsAtEvent #row_"+found);
	    	}	    	
	    },
	    error: function (xhr, status, error){
	    console.log("ERROR:"+error);
	    }
	});
}

function remove(num){

	$.ajax({
	    url: num+'/',
	    type: 'DELETE',	    
	    success: function (data,textStatus, xhr) {
	    	$("#individual").find("#row_"+num).remove();	    	
	    },
	    error: function(xhr, status, error){
	    	console.log("ERROR:"+error);
	    }
	});
	//this is in here twice because of a weird bug where if the first action after page load was to click the remove on the first row (tested with team # 1), it wouldnt work
	//$("#row_"+num).remove();
	//$("#row_"+num).remove();
}

function editable(data) {
	$("#row_"+data+" input").prop('disabled', false);
	$("#number"+data).prop('disabled', true);
	$("#save"+data).show();
	$("#edit"+data).hide();
	#if($isDivision)
		$("#division"+data).prop("disabled",true);
		$("#division"+data).attr("title","Division cannot be changed here. Use the Event-Level Team Add.");
	#end
}

function saveTeam(data){
	
	var teamData = {
		number:data,
		name: $("#name"+data).val(),
		school: $("#school"+data).val(),
		city: $("#city"+data).val(),
		state: $("#state"+data).val(),
		country: $("#country"+data).val(),
		rookie: $("#rookie"+data).val(),
	}
	var t = {
		data: teamData,
		advanced: $("#advanced"+data).prop("checked"),
		division: $("#division"+data).val(),
	};
	$.ajax({
	    url: 'edit/',
	    type: 'POST',
	    contentType:'application/json',
	    data: JSON.stringify(t),
	    success: function (returnData,textStatus, xhr) {
	    	$("#row_"+data+" input").prop('disabled', true);
	    	$("#save"+data).hide();
	    	$("#edit"+data).show(); 
	    	$("#division"+data).attr("title","");	
	    },
	    error: function(xhr, status, error){
	    	console.log(xhr);
	    }
	});
}



function hideSchools(cb) {
	if (cb.checked) {
		$(".school").each(function(index){
			$(this).removeClass("col-2");
			$(this).addClass("d-none");
		});
		$(".advanced").each(function(index){
			$(this).removeClass("col-1");
			$(this).addClass("col-2");
		});
		
	} else {
	$(".school").each(function(index){
			$(this).addClass("col-2");
			$(this).removeClass("d-none");
		});
		$(".advanced").each(function(index){
			$(this).addClass("col-1");
			$(this).removeClass("col-2");
		});
	}	
}
$(document).ready(function(){
	#if(!$addingToLeague && $isLeague)
	$('#leagueTab').click();	
	#else
    $('#indTab').click();
	#end
    $('#hideSchoolsBox').click();
        $('#teamIn').keypress(function(e){
          if(e.keyCode==13)
          $('#indAdd').click();
        });
        
        $.ajax({
		    url: '$GET_COUNTRIES_LIST',
		    type: 'GET',
		    success: function (data,textStatus, xhr) {
		    	list = JSON.parse(data);
		    	$("#countrySelect").empty(); // remove old options
		    	$.each(list, function(key, value) {
		    		$("#countrySelect").append($("<option></option>").attr("value", value).text(value));
		    	});
		    	#if($country)
			    	if (list.indexOf("$country") >= 0) {
				    	$("#countrySelect").val("$country");
				    } else {
				    	if (list.indexOf("USA") >= 0) {
				    		$("#countrySelect").val("USA");
				    	}	
				    }
			    	#else
			    	if (list.indexOf("USA") >= 0) {
			    		$("#countrySelect").val("USA");
			    	}
			    	#end
		    	updateStateList();
		    	
		    },
		    error: function(xhr, status, error){
		    
		    }
		});
        #if($isLeague)
        $.ajax({
		    url: './leagues/',
		    type: 'GET',
		    success: function (data,textStatus, xhr) {
		    	list = JSON.parse(data);
		    	$("#leagueSelect").empty(); // remove old options
		    	$.each(list, function(key, value) {
		    		$("#leagueSelect").append($("<option></option>").attr("value", value).text(value));
		    	});
		    	updateTeamListForLeague();
		    },
		    error: function(xhr, status, error){
		    
		    }
		});
    	$("#leagueSelect").change(updateTeamListForLeague);
        #end
	$("#countrySelect").change(updateStateList);
	$("#stateSelect").change(updateTeamListForState);
});

function updateStateList() {
	o = {country: $("#countrySelect").val()};
	$.ajax({
	    url: '$GET_STATES_LIST',
	    type: 'GET',
	    data: o,
	    success: function (data,textStatus, xhr) {
	    	list = JSON.parse(data);
	    	$("#stateSelect").empty(); // remove old options
	    	$.each(list, function(key, value) {
	    		$("#stateSelect").append($("<option></option>").attr("value", value).text(value));
	    		console.log('Added state: ' + value);
	    	});		   
	    	#if($state)
	    		if (list.indexOf("$state") >= 0) {
			    	$("#stateSelect").val("$state");
			    }
	    	#end
	    	updateTeamListForState();
	    },
	    error: function(xhr, status, error){
	    
	    }
	});
}
function updateTeamListForState() {
	o = {country: $("#countrySelect").val(), state:$("#stateSelect").val()};
	$.ajax({
	    url: '$GET_TEAMS_FOR_LOCATION',
	    type: 'GET',
	    data: o,
	    success: function (data,textStatus, xhr) {
	    	list = JSON.parse(data);
	    	$("#allAtEventList").empty(); // remove old options
	    	$.each(list, function(key, data) {
	    		//TODO we need to check if they are already added to this event?
	    		var alreadyHere = false;
	    		if ($("#individual").find("#row_"+data.number).length) {
	    			alreadyHere = true;
	    		}
	    		$("#allAtEventList").append("<tr id='row_" + data.number + "' class='d-flex'><th scope='row' class='col-1'>" + data.number + "</td><td class='col-2'>" + data.name + "</td><td class='col-3'>" + data.school + "</td><td class='col-2'>" + data.city + "</td><td class='col-1'>" + data.state + "</td><td class='col-1'>" + data.country + "</td><td class='col-1'>" + data.rookie + "</td><td class='col-1'><div class='form-check form-check-inline'><input class='form-check-input' onchange='updateTeamFromList(this)' type='checkbox' id='" + data.number + "Checkbox' name='addTeam' value='" + data.number + "Checkbox'" + (alreadyHere ? "checked" : "") + "></div></td></tr>");
	    	});		   
	    },
	    error: function(xhr, status, error){
	    
	    }
	});
}
function updateTeamListForLeague() {
	$.ajax({
	    url: './leagues/'+$("#leagueSelect").val()+'/',
	    type: 'GET',
	    success: function (data,textStatus, xhr) {
	    	list = JSON.parse(data);
	    	$("#allInLeagueList").empty(); // remove old options
	    	$.each(list, function(key, data) {
	    		//TODO we need to check if they are already added to this event?
	    		var alreadyHere = false;
	    		if ($("#individual").find("#row_"+data.number).length) {
	    			alreadyHere = true;
	    		}
	    		$("#allInLeagueList").append("<tr id='row_" + data.number + "' class='d-flex'><th scope='row' class='col-1'>" + data.number + "</td><td class='col-2'>" + data.name + "</td><td class='col-3'>" + data.school + "</td><td class='col-2'>" + data.city + "</td><td class='col-1'>" + data.state + "</td><td class='col-1'>" + data.country + "</td><td class='col-1'>" + data.rookie + "</td><td class='col-1'><div class='form-check form-check-inline'><input class='form-check-input' onchange='updateTeamFromList(this)' type='checkbox' id='" + data.number + "Checkbox' name='addTeam' value='" + data.number + "Checkbox'" + (alreadyHere ? "checked" : "") + "></div></td></tr>");
	    	});		   
	    },
	    error: function(xhr, status, error){
	    
	    }
	});
}
function updateTeamFromList(element) {
	var num = parseInt(element.id.substring(0, element.id.length - 8));
	if (element.checked) {
		add(num);
	} else {
		remove(num);
	}
}
function assignRandom(){
	$.ajax({
	    url: "divisions/random/",
	    type: 'POST',
	    success: function (data,textStatus, xhr) {
	    	window.location.reload(false);   
	    },
	    error: function(xhr, status, error){
	    	
	    }
	});
}
function clearDivisions(){
	$.ajax({
	    url: "divisions/clear/",
	    type: 'POST',
	    success: function (data,textStatus, xhr) {
	    	window.location.reload(false);   
	    },
	    error: function(xhr, status, error){
	    	
	    }
	});
}
</script>
#end